package io.github.luckymcdev.groovyengine.generators.structure;

import io.github.luckymcdev.groovyengine.GroovyEngine;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;

public class ResourcepackGenerator {

    // This path is now relative to the root pack generated by GroovyEnginePackRootGenerator
    private static final Path ASSETS_ROOT = GroovyEnginePackRootGenerator.GROOVY_ENGINE_PACK_ROOT.resolve("assets")
            .resolve(GroovyEngine.MODID); // Your mod ID as the namespace

    public static void generate() { // Renamed method from generateResourcePack to generate
        try {
            // Ensure base assets folders are created under the pack root
            Files.createDirectories(ASSETS_ROOT.resolve("textures/item"));
            Files.createDirectories(ASSETS_ROOT.resolve("textures/block"));
            Files.createDirectories(ASSETS_ROOT.resolve("models/item"));
            Files.createDirectories(ASSETS_ROOT.resolve("models/block"));
            Files.createDirectories(ASSETS_ROOT.resolve("lang"));

            // Create or overwrite en_us.json with empty JSON object if it doesn't exist
            Path langFile = ASSETS_ROOT.resolve("lang/en_us.json");
            if (Files.notExists(langFile)) {
                Files.writeString(langFile, "{}", StandardCharsets.UTF_8);
            }

            GroovyEngine.LOGGER.info("Generated Resource Pack assets folder structure.");

        } catch (IOException e) {
            GroovyEngine.LOGGER.error("Failed to generate Resource Pack assets structure: {}", e.getMessage());
        }
    }
}